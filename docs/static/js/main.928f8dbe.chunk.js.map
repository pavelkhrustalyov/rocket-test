{"version":3,"sources":["components/Title/Title.jsx","components/Wrapper/Wrapper.jsx","components/InputData/InputData.jsx","components/PersonItem/PersonItem.jsx","components/PersonList/PersonList.jsx","utils/supportFunc.js","App.js","index.js"],"names":["Title","title","className","Wrapper","children","styles","style","InputData","addPerson","setValue","question","useState","value","setValueInput","onChange","e","targetValue","target","type","placeholder","onClick","disabled","trim","PersonItem","id","name","job","visible","addNewField","deletePerson","next","last","key","left","position","PersonList","persons","end","index","length","map","person","selectFields","data","App","titles","setPersons","currentIndex","setCurrentIndex","inputField","setInputField","newPerson","Math","random","toString","marginLeft","newPersons","oldPersons","Object","assign","prev","findIndex","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.928f8dbe.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Title.scss';\n\nconst Title = ({ title }) => {\n    return (\n        <h1 className=\"title\">{title}</h1>\n    )\n}\n\nexport default Title;","import React from 'react';\nimport './Wrapper.scss';\n\nconst Wrapper = ({ children, styles }) => {\n    return (\n        <div style={styles} className=\"wrapper\">{children}</div>\n    );\n};\n\nexport default Wrapper;","import React, { useState } from 'react';\n\nimport './InputData.scss';\n\nconst InputData = ({ addPerson, setValue, question }) => {\n\n    const [ value, setValueInput ] = useState('');\n\n    const onChangeValue = (e) => {\n        const targetValue = e.target.value;\n        setValue(targetValue);\n        setValueInput(targetValue);\n    };\n\n    return (\n        <div className=\"input-data\">\n            <div className=\"input-data_wrap\">\n                <div className=\"input-data-text\">{question}</div>\n                <input\n                    onChange={onChangeValue}\n                    value={value}\n                    type=\"text\"\n                    placeholder=\"Фамилия и имя\"\n                />\n            </div>\n            <button\n                onClick={addPerson}\n                disabled={value.trim() === ''}\n                className=\"input-data-btn\">ok\n            </button>\n        </div>\n    );\n}\n\nexport default InputData;","import React from 'react';\n\nimport './PersonItem.scss';\nimport Wrapper from '../Wrapper/Wrapper';\nimport InputData from '../InputData/InputData';\n\nconst PersonItem = ({\n    id,\n    name,\n    job,\n    question,\n    visible,\n    styles,\n    addNewField,\n    deletePerson,\n    setValue,\n    addPerson,\n    next,\n    last }) => {\n    return (\n        <>\n            <Wrapper styles={styles}>\n                {\n                    !visible && !last ?\n                    (\n                        <InputData\n                            question={question}\n                            addPerson={() => addPerson(id)}\n                            setValue={setValue}\n                        />\n                    )\n                    : (\n                        <div key={id} className=\"person\">\n                            <div className=\"photo\">{name[0]}</div>\n                            <div className=\"person-wrap\">\n                                <div className=\"person-name\">{name}</div>\n                                <div className=\"person-job\">{job}</div>\n                            </div>\n                            <button className=\"person-delete\" onClick={() => deletePerson(id)}>X</button>\n                        </div>\n                    )\n                }\n            </Wrapper>\n                <div className=\"next-person\">\n                    {\n                        !next && visible && !last ?\n                        <div style={{ left: styles.left, position: \"absolute\" }}>\n                            <div className=\"line-vertical\"></div>\n                            <button className=\"next-person_btn\" onClick={addNewField}>+</button>\n                        </div>\n                        : (!visible && next) || last ? null : <div style={{ left: styles.left, position: \"absolute\" }} \n                        className=\"line\"></div>\n                    }\n                </div>\n        </>\n    );\n}\n\nexport default PersonItem;","import React from 'react';\n\nimport './PersonList.scss';\n\nimport PersonItem from '../PersonItem/PersonItem';\nimport Wrapper from '../Wrapper/Wrapper';\n\nconst PersonList = ({ persons, setValue, addNewField, addPerson, end, deletePerson, index }) => {\n    \n    return (\n        <div className=\"person-list\">\n            {\n                persons.length === 0 ?\n                <Wrapper>\n                    <div className=\"added_wrap\">\n                        <button onClick={addNewField} className=\"add-person\">+</button>\n                        <div className=\"text\">Добавьте самого главного чувачка</div>\n                    </div>\n                </Wrapper>\n                : persons.map(person => {\n                    return (\n                        <PersonItem\n                            key={person.id}\n                            setValue={setValue}\n                            addNewField={addNewField}\n                            addPerson={addPerson}\n                            end={end}\n                            deletePerson={deletePerson}\n                            index={index}\n                            { ...person }\n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default PersonList;","export const selectFields = (index) => {\n    const data = {\n      job: '',\n      question: ''\n    };\n    switch(index) {\n      case 0:\n        data.job = 'Генеральный директор';\n        data.question = 'Как его зовут?';\n        break;\n      case 1:\n        data.job = 'Руководитель мобильной разработки';\n        data.question = 'Как его зовут?';\n        break;\n      case 2:\n        data.job = 'Back-end developer';\n        data.question = 'Как его зовут треьтего блять?';\n        break;\n      default:\n        data.job = 'Генеральный директор';\n        data.question = 'Как его зовут?';\n        break;\n    }\n    return data;\n  };\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport Title from './components/Title/Title';\nimport PersonList from './components/PersonList/PersonList';\nimport { selectFields } from './utils/supportFunc';\n\nconst App = () => {\n\n  const [ titles ] = useState([\n    'Чтобы начать, нажмите на форму внизу',\n    'Круто, давай добавим еще двоих сотрудников',\n    'Остался последний, давай еще немного',\n    'Все, теперь ты молодец теперь удали их всех и сделай нормально'\n  ]);\n\n  const [ persons, setPersons ] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [inputField, setInputField] = useState('');\n\n  const setValue = (value) => setInputField(value);\n\n  const addNewField = () => {\n    const index = persons.length;\n    if (currentIndex >= titles.length - 1) return;\n\n    let newPerson = {\n      id: Math.random().toString(),\n      question: selectFields(currentIndex).question,\n      styles: {\n        marginLeft: `${80 * currentIndex}px`,\n        left: `${currentIndex > 0 ? 130 : 50 * (currentIndex === 0 ? 1 : currentIndex)}px`\n      },\n      visible: false,\n      next: true,\n      last: false\n    };\n    if (index !== 0) {\n      const newPersons = [...persons];\n      newPersons[index - 1].next = true;\n      setPersons(newPersons);\n    }\n    setPersons(oldPersons => [...oldPersons, newPerson]);\n  };\n\n  const addPerson = (id) => {\n    const index = persons.length;\n    if (index >= titles.length - 1) {\n      const newPersons = [...persons];\n      newPersons[index - 1].last = true;\n      setPersons(newPersons);\n    }\n \n    const newPerson = {\n      name: inputField,\n      job: selectFields(currentIndex).job,\n      visible: true,\n      next: false,\n    };\n    \n    setPersons(persons.map(person => {\n      return person.id === id ? Object.assign(person, newPerson) : person\n    }));\n\n    setCurrentIndex(prev => prev + 1);\n  };\n\n  const deletePerson = (id) => {\n    const index = persons.findIndex(person => person.id === id);\n    setCurrentIndex(index);\n    if (index === 0) {\n      setPersons([])\n      return;\n    }\n    const newPersons = [...persons];\n    newPersons[index - 1].next = false;\n    setPersons(newPersons);\n    setPersons(persons.filter(person => person.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Title title={titles[currentIndex]} />\n      <PersonList\n        persons={persons}\n        addNewField={addNewField}\n        setValue={setValue}\n        addPerson={addPerson}\n        deletePerson={deletePerson}\n        index={currentIndex}\n        end={currentIndex >= titles.length - 1}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}